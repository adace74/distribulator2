######################################################################
#
# $Id$
#
######################################################################

Legend For Changes Below:
"-" Indicates a change that hasn't even been started on.
"+" Indicates a change that is currently being developed.
"*" Indicates a change that is at least 80%(if not 100%) complete.

Change List For v0.3 (Language: Perl / Status: Shipped)
-------------------------------------------------------
* Some semblance of a shell, include a useful prompt.
  Now includes 'cat', 'cd', and 'ls' for local server browsing.
* Ability to load in text-based lists of servers, representing
  server sets.
* Ability to load in different remote usernames for different server sets
  from a text file.
  (i.e. apache@web01, tomcat@app01)
* Ability to work with -one- environment of servers at a time,
  specified at startup via --env=my_environment.
  The idea here is not allow users to mix devel, testing, and production worlds.
* Attempts to connect to all servers port 22, -before- running ssh.
  This health-check prevents "session hang" that can occur by running
  ssh alone.
* Single remote server command execution.
* Multiple set-based remote server command execution.
* Pattern-based group and server name matching for the lazy sysadmin
  in all of us.

Change List For v0.4-v0.45 (Language: Perl / Status: Shipped)
-------------------------------------------------------------
* Addition of the "login" command.  Basically allows the user to specify
  a server to login to without having to exit the distribulator.
* Addition of --noping for environments where either a ServerPing is
  undesirable or the installed version of Net::Ping is out-of-date.
* Addition of the "all" server group.  This will allow one to run any command
  across every group in the started-up environment.
* Addition of the ability to read in a text-file list of common Unix commands.
* Addition of the ability to distinguish those commands as external and
  simply pass them through to the underlying shell via the system() call.

Change List For v0.47 (Language: Perl / Status: Shipped)
--------------------------------------------------------
* Modularized codebase.  Still not all that generic, but at least
  broken out by functionality.  There's still way too many
  inter-dependancies, but it's at least more manageable.
* Various fixes, including that of the Net::Ping code,
  no CPAN module addon required.  Removed --noping as the underlying
  assumption behind it is not valid.
* Term::ReadLine::GNU & GNU libreadline are now required for this
  software to perform correctly(or even run it seems).
* Lots of GNU libreadline functionality: history load/save,
  tab-completion of first word command, some CTRL-C / CTRL-D integration.
* Crude attempts to fix problems relating to running distribulator,
  then exiting and having one's term act very flakey.
* Added ability to abort a command while executing on X servers.
  (Hold down CTRL-C, or just hit it a number of times)
* Improved testing process, thus improved stability.

Change List For v0.48 (Language: Perl / Status: Shipped)
--------------------------------------------------------
* Fixed a silly bug where the command-line prompt wasn't being updated with
  the current server group.
* Added a -t flag to the run command.  This will allow one to specify
  whether a remote tty is required for a given command.  This has caused
  much pain within my work environment lately.  Use with caution, some
  programs/scripts require -t (i.e. vi) and some will utterly break on
  Linux if given -t (i.e. some custom startup scripts).
* Fixed the included wrapper script such that it stores the user's
  pwd on startup, then passes it along to the distribulator such that
  the module directory magic going is transparent.
* Fixed code to ignore 'CVS' directories.

Change List For v0.5 (Language: Python / Status: Shipped)
---------------------------------------------------------
* First 100% Python release.  Enjoying the benefits of a more
  natively object-oriented language than Perl.
* All previous Perl features implemeneted, some better than before.
* Auditing implemented.
* Batch mode implemented.
* XML config implemented.
* Single local server file to single group server file copy.
(i.e. scp awd@localhost:/tmp/blah awd@app:/some/other/path)

Change List For v0.51 (Language: Python / Status: Shipped)
----------------------------------------------------------
* Lots of documentation updates,
  aiming for the normal INSTALL/README paradigm.

Change List For v0.52 (Language: Python / Status: Shipped)
----------------------------------------------------------
* Changed command "server-group" with no arguments to print
  a server-group list similar to that at startup.
* Fixed inaccuracies found in this Changelog.
* SourceForge bug #744225 fixed.
* SourceForge bug #744226 fixed.
* SourceForge bug #749953 fixed.
* SourceForge bug #749963 fixed.

Change List For v0.53 (Language: Python / Status: Skipped)
----------------------------------------------------------
* Minimal cosmetic fixes in how server-list and server-group
  do output.

Change List For v0.6 (Language: Python / Status: In Progress)
-------------------------------------------------------------
* Goal: The ongoing goal of this release is to provide a "good enough"
  featureset for real-world applications, and to implement a
  feature freeze such that focus can be shifted to stability / correctness issues.
* Batch Mode: Addition of --quiet flag to indicate we don't want output when
  run in batch mode.  The default now is to NOT be quiet.
* Batch Mode: Addition of comment(#) and line(\) continuation compatability.
  This will only allow comments to be on a single line, by themselves.
* Batch Mode: Addition of --var1, --var2, and --var3, which enable very simple string
  substitution such that batch files don't have to be completely hard-coded.
* Addition of the ability to run commands on a single server, list of multiple servers,
  single server group, as well as multiple server groups.
* Addition of the ability to copy files(one-way for right now) from a local server
  out to a single server, list of multiple servers, single server group,
  as well as multiple server groups.
* Addition of a valid XML DTD, such that one can use readily-available
  XML validators to verify that config.xml has no syntax errors,
  spelling mistakes(in tags anyways), etc.  Verified example config.xml
  actually validates via a standard XML validator.
* Removed short version of option flags.  They've outlived their
  usefullness and have become more effort than they're worth.
* Documentation system-wide has been updated to reflect new features added,
  as well as the usual clean-up efforts.
* Small LICENSE fixes, also propogated other legalese.

Change List For v0.61 (Language Python / Status: On Hold)
---------------------------------------------------------
- This release will be a fixes-only release.
- Currently awaiting results of further testing, bug-finding, etc.

Idea List For v0.7 (A little farther out)
-----------------------------------------
- Single local server file to mutliple server group file copy.
  i.e. copy /tmp/test app,www:/var/tmp/
- Ability to run commands on a remote single server.
(i.e. ssh awd@www01 "uptime")
- Single local server file to single remote server file copy.
(i.e. scp /tmp/blah awd@www01:/some/other/path/)
- Single remote server file to single remote server file copy.
(i.e. scp awd@www01:/tmp/blah awd@www02:/some/other/path/)

Idea List For v1.0 (Will we ever get here?  Who knows!)
-------------------------------------------------------
- Some sort of respectable regression test suite.
  Can be done using batch files and expect?
- OO design sanity fixes.  Need to start using static methods
  where appropriate.
- A server mode in which the distribulator will check an incoming command
  queue(a file or two?) then run those on what it considers to be its
  siblings.  This would allow commands and files to be routed to
  X number of servers in a speedy fashion.
- A decent install / setup system!  Perhaps a quick autoconf thingie?
- Sudo-based remote permissions checking?
- Integration with ncurses such that one could run a command on 4 servers
  in parallel, and see the output from each of them?
- What more could one want?
